.TH _PRINTF 3 "November 2023" "Holberton School Team Project in C - _printf"

.SH NAME
.B _printf\fR \- formatted output conversion

.SH SYNOPSIS
.B #include \fB"main.h"

.B Prototype : int printf(const char *\fIformat\fB, ...);

.SH DESCRIPTION
The function \fB_printf()\fR writes output to \fIstdout\fR, the standard 
output. The function writes under the control of a \fIformat\fR string that 
specifies how subsequent arguments (accessed via the variable-length argument 
facilities of stdarg) are converted for output.

.B Return value
.in +2n
Upon successful return, \fB_printf()\fR returns the number of characters 
printed (excluding the null byte used to end output to strings).

If an output error is encountered, -1 is returned.
.in

.B Format of the format string
.in +2n
The format string is a constant array of characters. The function is composed of zero or more 
directives: ordinary characters (not \fB%\fR) which are copied unchanged to 
the output stream; and conversion specifiers, each of which results in 
fetching zero or more subsequent arguments. Conversion specification is 
introduced by the character \fB%\fR and ends with a \fIconversion specifier\fR.

.B Conversion Specifiers
.in +2n
Conversion specifiers are characters that specifies the type of conversion to be applied. The 
conversion specifiers and their meaning are the following :

.RS
.B d, i
.in +2n
The \fIchar\fR is converted to an integer and is associated with a decimal,
whether it is positive or negative.
.in
.RE

.RS
.B c
.in +2n
The \fIchar\fR argument is converted to an \fIunsigned char\fR, and the 
resulting character is written.
.in
.RE

.RS
.B s
.in +2n
The \fIchar *\fR argument is expected to be a pointer to a character 
array (pointer to a string). Characters from the array are written starting 
from the first element of the array and ending at, but not including, the 
terminating null byte ('\\0').
.in
.RE

.RS
.B %
.in +2n
A '%' is written. No argument is taken. The complete conversion 
specification is '%%'.
.in
.RE

.SH EXAMPLE
To print the address of Holberton School, "37 Rue des Marchands, Toulouse, F 31000", followed by a new line, where \fIstreet\fR, \fIcity\fR, and \fIstate\fR are pointers to strings:

.RS
#include "main.h"

int main(void)

{
	char *street = "Rue des Marchands";
        char *city = "Toulouse";
        char state = 'F';

        _printf("%d, %s, %s %c %i\n", 37, street, city, state, 31000);

        return (0);
}
.RE

.SH SEE ALSO
printf(3)

The \fB_printf()\fR function emulates functionality of the C standard library 
function \fBprintf()\fR. This man page borrows from the corresponding Linux 
man page printf(3).

.SH AUTHOR
Dumont Arwen and Pavaux Mathilde
